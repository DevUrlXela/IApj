import neurolab as nl
import pylab as pl

# Logical &
entrada = [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 92.94],
            [0.0, 0.0, 54.61, 0.0, 0.06, 42.39, 0.0, 1.96],
            [0.0, 0.0, 16.1, 0.0, 0.0, 1.43, 3.31, 79.16],
            [0.0, 0.0, 31.33, 0.0, 0.0, 0.0, 6.04, 62.37],
            [0.0, 0.0, 28.78, 0.0, 0.0, 0.65, 28.55, 41.94],
            [0.0, 0.0, 24.24, 1.22, 0.0, 70.18, 0.45, 3.9],
            [0.0, 0.0, 14.73, 0.0, 0.0, 3.78, 3.1, 78.18],
            [0.0, 0.0, 0.37, 0.0, 0.0, 84.61, 8.24, 0.0],
            [0.0, 0.0, 0.0, 0.0, 0.0, 3.45, 0.0, 55.63],
            [0.0, 0.0, 0.57, 0.0, 0.0, 84.06, 12.98, 0.0],
            [1.06, 0.0, 14.37, 0.0, 0.0, 5.47, 38.82, 35.45],
            [0.0, 0.0, 40.86, 0.02, 0.0, 54.86, 2.88, 0.94],
            [0.0, 0.0, 17.33, 0.0, 0.0, 51.41, 12.29, 12.27],
            [0.0, 0.0, 24.1, 0.14, 0.0, 69.73, 0.08, 4.49],
            [0.0, 0.0, 8.63, 0.0, 0.0, 0.0, 0.0, 91.29],
            [0.0, 0.0, 42.67, 0.0, 0.0, 0.0, 2.67, 54.65],
            [0.0, 0.0, 48.57, 0.0, 0.0, 26.12, 0.27, 13.02],
            [0.0, 0.0, 54.73, 0.0, 0.0, 0.0, 0.0, 45.27],
            [0.0, 0.0, 8.61, 0.0, 0.0, 67.76, 18.35, 5.29],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 98.47],
            [0.0, 0.0, 60.02, 0.0, 0.0, 34.41, 4.49, 0.63],
            [0.0, 0.0, 21.29, 0.0, 0.0, 12.94, 63.12, 2.59],
            [0.0, 0.0, 0.0, 0.0, 0.0, 0.18, 0.0, 86.35],
            [0.0, 0.0, 22.24, 0.0, 0.0, 44.94, 16.71, 13.96],
            [0.0, 0.0, 0.16, 0.0, 0.0, 68.86, 7.59, 0.0],
            [0.0, 0.0, 50.51, 0.0, 0.22, 44.12, 0.0, 1.96],
            [0.0, 0.0, 35.31, 0.43, 0.0, 61.33, 0.92, 1.55],
            [0.76, 0.0, 0.08, 0.0, 3.0, 26.61, 0.73, 40.78],
            [0.0, 0.0, 1.86, 0.0, 0.0, 1.88, 0.02, 87.86],
            [0.0, 0.0, 10.92, 0.0, 0.0, 41.94, 11.47, 35.65],
            [0.0, 0.0, 4.8, 0.0, 0.0, 0.0, 0.0, 95.02],
            [0.0, 0.0, 38.18, 0.0, 0.0, 58.69, 2.02, 0.63],
            [0.55, 0.0, 0.02, 0.0, 3.02, 29.1, 0.65, 37.41],
            [0.0, 0.0, 10.06, 0.0, 0.0, 0.0, 85.41, 4.53],
            [0.0, 0.0, 1.78, 0.0, 0.0, 79.86, 17.27, 0.43],
            [0.0, 0.0, 14.06, 0.0, 0.0, 1.61, 1.73, 81.02],
            [0.0, 0.0, 22.14, 0.04, 0.0, 72.57, 3.92, 1.29],
            [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 33.33],
            [0.0, 0.0, 52.86, 0.0, 0.0, 47.14, 0.0, 0.0],
            [0.0, 0.0, 86.24, 0.0, 0.0, 0.0, 0.0, 13.76],
            [0.0, 0.0, 25.29, 0.0, 0.0, 40.49, 20.14, 12.61],
            [0.0, 0.0, 27.69, 0.0, 0.59, 65.8, 0.0, 0.73],
            [0.0, 0.0, 31.33, 0.0, 0.0, 5.22, 39.14, 24.16],
            [0.0, 0.0, 22.8, 0.0, 0.0, 46.94, 0.1, 12.45]]

target = [[0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,0,0,1],
            [0,0,0,0,1,0],
            [0,0,0,1,0,0],
            [1,0,0,0,0,0],
            [0,0,0,0,0,1],
            [0,0,1,0,0,0],
            [0,0,0,0,0,1],
            [0,0,1,0,0,0],
            [0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,1,0,0],
            [0,1,0,0,0,0],
            [0,0,0,0,0,1],
            [0,0,0,0,1,0],
            [1,0,0,0,0,0],
            [0,0,0,1,0,0],
            [0,0,1,0,0,0],
            [0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,1,0,0],
            [0,0,0,0,0,1],
            [0,0,0,0,1,0],
            [0,0,1,0,0,0],
            [1,0,0,0,0,0],
            [1,0,0,0,0,0],
            [0,0,0,0,0,1],
            [0,0,0,0,0,1],
            [0,0,0,0,1,0],
            [0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,0,0,1],
            [0,0,0,1,0,0],
            [0,0,1,0,0,0],
            [0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,0,0,1],
            [1,0,0,0,0,0],
            [0,0,0,0,1,0],
            [0,0,0,1,0,0],
            [1,0,0,0,0,0],
            [0,0,0,1,0,0],
            [0,0,0,1,0,0]]

# Create net with 2 inputs and 1 neuron
#net = nl.net.newp([[0, 1],[0, 1]], 1)

#nl.net.newff([[-0.5, 0.5], [-0.5, 0.5]], [3, 1])  Tres neuronas en capa oculta, una en capa de salida
net = nl.net.newff([[-1, 1]]*8, [6, 6])
print(net.ci)
print(net.co)
# train with delta rule
# see net.trainf
error = net.train(entrada, target, epochs=100, show=100, goal=0.01)

# Plot results
out = net.sim(entrada)
#pl.plot(error)
pl.plot(out)
pl.plot(target)
pl.xlabel('Epoch number')
pl.ylabel('Train error')
pl.grid()
pl.show()


#net = newff([[-0.5, 0.5], [-0.5, 0.5]], [3, 1])
